/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ManageCustomer;

import business.Flight;
import business.TravelAgency;
import business.User;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sunwe_000
 */
public class search_display extends javax.swing.JPanel {

    /**
     * Creates new form search_display
     */
    private JPanel userProcess;
    private TravelAgency travelAgency;
    public search_display(JPanel userProcess, TravelAgency travelAgency) {
        initComponents();
        this.travelAgency = travelAgency;
        this.userProcess = userProcess;
    }
    
    private ArrayList<Flight> search(String from, String to, String price)
    {
        ArrayList<Flight> result = new ArrayList<Flight>(travelAgency.getMasterFlightSchedule());
        if(!from.isEmpty())
        {
            for(int i=result.size()-1;i>=0;i--)
            {
                if(!result.get(i).getFrom().equals(from))
                    result.remove(i);
            }
        }
        
        if(!to.isEmpty())
        {
            for(int i=result.size()-1;i>=0;i--)
            {
                if(!result.get(i).getTo().equals(to))
                    result.remove(i);
            }
        }
        
        if(!price.isEmpty())
        {
            int p = Integer.parseInt(price);
            for(int i=result.size()-1;i>=0;i--)
            {
                if(!(result.get(i).getPrice()<=p))
                    result.remove(i);
            }
        }
        return result;
    }
    
    public void populateTable(ArrayList<Flight> flights)
    {
        DefaultTableModel dtm = (DefaultTableModel)tblFlight.getModel();
        dtm.setRowCount(0);
        
        for(Flight flight : flights)
        {
            Object row[] = new Object[6];
            row[0] = flight;
            row[1] = flight.getFrom();
            row[2] = flight.getTo();
            row[3] = flight.getPrice();
            row[4] = flight.getTakeOffTime();
            row[5] = flight.getAvaliSeatNum();
            dtm.addRow(row);            
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaxPrice = new javax.swing.JTextField();
        txtFrom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        BtnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlight = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        BtnBook = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtStuffID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        txtStuffName = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel1.setText("Book Ticket");

        jLabel2.setText("Ticket Price Under:");

        jLabel3.setText("From:");

        jLabel4.setText("To:");

        BtnSearch.setText("Search");
        BtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSearchActionPerformed(evt);
            }
        });

        tblFlight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "From", "To", "Price", "Take off", "Seat Remain"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFlight);
        if (tblFlight.getColumnModel().getColumnCount() > 0) {
            tblFlight.getColumnModel().getColumn(0).setResizable(false);
            tblFlight.getColumnModel().getColumn(1).setResizable(false);
            tblFlight.getColumnModel().getColumn(2).setResizable(false);
            tblFlight.getColumnModel().getColumn(3).setResizable(false);
            tblFlight.getColumnModel().getColumn(4).setResizable(false);
            tblFlight.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel5.setText("Customer ID:");

        BtnBook.setText("Select and Book");
        BtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBookActionPerformed(evt);
            }
        });

        BtnBack.setText("<<Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel6.setText("Agency Stuff ID:");

        jLabel7.setText("Customer Name:");

        jLabel8.setText("Stuff Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFrom)
                            .addComponent(txtMaxPrice)
                            .addComponent(txtTo, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BtnSearch)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(BtnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnBook)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCustomerID)
                    .addComponent(txtStuffID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCustomerName)
                    .addComponent(txtStuffName))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtStuffID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtStuffName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnBack)
                            .addComponent(BtnBook))))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        userProcess.remove(this);
        CardLayout layout = (CardLayout) userProcess.getLayout();
        layout.previous(userProcess);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSearchActionPerformed
        // TODO add your handling code here:
        String str = txtMaxPrice.getText();
        if (str.length()<=0)
        {
            JOptionPane.showMessageDialog(null, "Please input an integer!");
            return;
        }       
        for (int x = str.length();--x>=0;){
            if (!Character.isDigit(str.charAt(x))){                  
                txtMaxPrice.setText("");  
                JOptionPane.showMessageDialog(null, "Please input an integer!");
                return;
                }
            }  
        String from = txtFrom.getText();
        String to = txtTo.getText();
        String price = txtMaxPrice.getText();
        
        ArrayList<Flight> result = search(from,to, price);
        
        for (int i = result.size()-1; i >0 ; --i)
            {
                for (int j = 0; j <i; ++j)
                {
                    if (result.get(j+1).getPrice() < result.get(j).getPrice())
                    {
                        Flight temp = result.get(j+1);
                        result.set(j+1, result.get(j));
                        result.set(j, temp);
                    }
                }
            }
        populateTable(result);
    }//GEN-LAST:event_BtnSearchActionPerformed

    private void BtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBookActionPerformed
        // TODO add your handling code here:
        String CID = txtCustomerID.getText();
        String SID = txtStuffID.getText();
        String CN = txtCustomerName.getText();
        String SN = txtStuffName.getText();
        
        if(CID.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please Input the Customer ID!");
            return;
        }
        if(CN.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please Input the Customer Name!");
            return;
        }
        if(SID.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please Input the Stuff ID!");
            return;
        }
        if(SN.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please Input the Stuff Name!");
            return;
        }
        
        User c = travelAgency.addUser();
        c.setUserName(CN);
        c.setUserID(CID);
        c.setUserType(true);
        User s = travelAgency.addUser();
        s.setUserID(SID);
        s.setUserName(SN);
        s.setUserType(false);
        
        int selected = tblFlight.getSelectedRow();
        if(selected >=0)
        {
            Flight f = (Flight) tblFlight.getValueAt(selected, 0);
            f.setAvaliSeatNum(f.getAvaliSeatNum()-1);
            JOptionPane.showMessageDialog(null, "Successfully Booked!");
            populateTable(travelAgency.getMasterFlightSchedule());
        }
        else
            JOptionPane.showMessageDialog(null, "Please select a row");
    }//GEN-LAST:event_BtnBookActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnBook;
    private javax.swing.JButton BtnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFlight;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtMaxPrice;
    private javax.swing.JTextField txtStuffID;
    private javax.swing.JTextField txtStuffName;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
