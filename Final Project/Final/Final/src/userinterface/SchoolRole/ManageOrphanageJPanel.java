/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SchoolRole;

import Business.Organization.ClassOrganization;
import Business.Organization.FundsOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.SchoolAdmin.AllClassList;
import Business.SchoolAdmin.EachClass;
import Business.SchoolAdmin.OrphanageList;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OTSWorkRequest;
import Business.WorkQueue.OrphanageWorkRequest;
import Business.WorkQueue.SchoolWorkRequest;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hello
 */
public class ManageOrphanageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrphanageJPanel
     */
    JPanel userProcessContainer;
    OrganizationDirectory organizationDirectory;
    AllClassList acl;
    OrphanageList oll;
    UserAccount account;
    OTSWorkRequest request;

    public ManageOrphanageJPanel(JPanel userProcessContainer, OrganizationDirectory 
            organizationDirectory, AllClassList acl, OrphanageList oll, UserAccount account, OTSWorkRequest request) {
        initComponents();//To change body of generated methods, choose Tools | Templates.
        this.acl = acl;
        this.oll = oll;
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.account = account;
        this.request = request;
        
   
        
        
        populateOrphanageTable();
        for (EachClass ec : acl.getAllClassList()) {
            comboClassList.addItem(ec.getClassName());
        }
    }
    
    
    public String[] extractData(String path) {
       
        String[] data = new String[3];
        BufferedReader br = null;
        String line = "";
        try {
            br = new BufferedReader(new FileReader(path));
            int i = 0;
            while ((line = br.readLine()) != null) {
                data[i++] = line;  
            }
        } 
        catch (FileNotFoundException e) {
            e.printStackTrace();
        } 
        catch (IOException e) {
            e.printStackTrace();
        } 
        finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } 
        return data;
    }

    public void populateOrphanageTable() {     
        String orpDetailsPath = extractData(request.getMessage())[1];
        BufferedReader br = null;
        String line;
        String separator = ",";
        try {
            br = new BufferedReader(new FileReader(orpDetailsPath));
            br.readLine();
            while ((line = br.readLine()) != null) {
                String[] details = line.split(separator);
                DefaultTableModel dtm = (DefaultTableModel) tblOrphanageList.getModel();
                Object[] row = new Object[4];
                row[0] = details[0];
                row[1] = details[1];
                row[2] = details[2];
                row[3] = details[3];
                dtm.addRow(row);
            }
        } 
        catch (FileNotFoundException ex) {
            Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex) {
            Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrphanageList = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChildren = new javax.swing.JTable();
        btnStudentAssignment = new javax.swing.JButton();
        comboClassList = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStudentListToTeacher = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        btnStudentLiostToTeacher = new javax.swing.JButton();
        sendBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        tblOrphanageList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrphanageName", "Address", "Phone", "email"
            }
        ));
        jScrollPane1.setViewportView(tblOrphanageList);

        btnView.setText("View Children List");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tblChildren.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FirstName", "LastName", "DoB", "Age"
            }
        ));
        jScrollPane2.setViewportView(tblChildren);

        btnStudentAssignment.setText("Assign Student to a class");
        btnStudentAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentAssignmentActionPerformed(evt);
            }
        });

        comboClassList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassListActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblStudentListToTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name ", "DOB", "Age", "Class Assigned"
            }
        ));
        jScrollPane3.setViewportView(tblStudentListToTeacher);

        assignBtn.setText("assign");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        btnStudentLiostToTeacher.setText("Download the student data");
        btnStudentLiostToTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentLiostToTeacherActionPerformed(evt);
            }
        });

        sendBtn.setText("Send the student data to Class Supervisor");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/nanshengtu/Downloads/WhatsApp Image 2018-04-27 at 1.53.01 AM.jpeg")); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendBtn)
                    .addComponent(btnStudentLiostToTeacher))
                .addGap(91, 91, 91))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnView)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnStudentAssignment)
                            .addGap(29, 29, 29)
                            .addComponent(comboClassList, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(assignBtn))))
                .addGap(0, 43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnView)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStudentAssignment)
                    .addComponent(comboClassList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignBtn))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStudentLiostToTeacher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendBtn)))
                .addGap(51, 51, 51))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        String childrenPath = extractData(request.getMessage())[0];
        
        DefaultTableModel dtm = (DefaultTableModel) tblChildren.getModel();
        dtm.setRowCount(0);
        tblChildren.removeAll();
        int selectedItem = tblOrphanageList.getSelectedRow();
        if (selectedItem >= 0) {
            BufferedReader br = null;
            String line = "";
            String separator1 = ",";
            try {
                br = new BufferedReader(new FileReader(childrenPath));
                br.readLine();
                while (true) {
                    line = br.readLine();
                    if (line == null) break;
                    String[] details = line.split(separator1);
           
                    Object[] row = new Object[4];
                    row[0] = details[0];
                    row[1] = details[1];
                    row[2] = details[2];
                    row[3] = details[3];

                    dtm.addRow(row);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnStudentAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentAssignmentActionPerformed
        comboClassList.removeAllItems();
        int selectedItem = tblChildren.getSelectedRow();
        String age1 = tblChildren.getValueAt(selectedItem, 3).toString();
        int age = Integer.parseInt(age1);

        for (EachClass ec : acl.getAllClassList()) {
            int IQ = randomWithRange(0, 10);
            if (age >= ec.getMinAge() && age <= ec.getMaxAge() && IQ >= ec.getClassAveragePerformance()) {
                comboClassList.addItem(ec.toString());
            }
        }
        if (comboClassList.getItemCount() == 0) {
            comboClassList.addItem("Remedial Class");
        }

    }//GEN-LAST:event_btnStudentAssignmentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int row = tblChildren.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel) tblStudentListToTeacher.getModel();
        Object[] object = new Object[6];
        object[0] = tblChildren.getValueAt(row, 0);
        object[1] = tblChildren.getValueAt(row, 1);
        object[2] = tblChildren.getValueAt(row, 2);
        object[3] = tblChildren.getValueAt(row, 3);
        
        object[4] = comboClassList.getSelectedItem().toString();
        dtm.addRow(object);

    }//GEN-LAST:event_assignBtnActionPerformed

    private void comboClassListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClassListActionPerformed

    private void btnStudentLiostToTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentLiostToTeacherActionPerformed
        FileWriter fw = null;
        try {
            // TODO add your handling code here:
            File file = new File("data//StudentListToTeacher.txt");
            fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < tblStudentListToTeacher.getRowCount(); i++) {
                for (int j = 0; j < tblStudentListToTeacher.getColumnCount(); j++) {

                    bw.write(tblStudentListToTeacher.getValueAt(i, j).toString() + "\t");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();

        } catch (IOException ex) {
            Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(ManageOrphanageJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        JOptionPane.showMessageDialog(null, "List downloaded!!");
    }//GEN-LAST:event_btnStudentLiostToTeacherActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
        String message = "data//StudentListToTeacher.txt";
        SchoolWorkRequest request = new SchoolWorkRequest();
        request.setMessageToTeacher(message);
        request.setSender(account);
        request.setStatus("Sent");
        Organization org = null;
        for (Organization organization : organizationDirectory.getOrganizationList()) {
            if (organization instanceof ClassOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);//copy in admin account
        }
        JOptionPane.showMessageDialog(null, "Message sent successfully");
    }//GEN-LAST:event_sendBtnActionPerformed
    int randomWithRange(int min, int max) {
        int range = (max - min) + 1;
        return (int) (Math.random() * range) + min;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnStudentAssignment;
    private javax.swing.JButton btnStudentLiostToTeacher;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboClassList;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTable tblChildren;
    private javax.swing.JTable tblOrphanageList;
    private javax.swing.JTable tblStudentListToTeacher;
    // End of variables declaration//GEN-END:variables
}
